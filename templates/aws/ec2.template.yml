AWSTemplateFormatVersion: 2010-09-09
Description: "This Template Contains the rough Scenario of a well know breach of a Financial Institution."
Parameters:
  IpAddress:
    Description: Your IP Address (Not CIDR notation).
    Type: String
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})
    ConstraintDescription: must be a valid IP address of the form x.x.x.x.
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "User Access Configuration"
        Parameters:
          - IpAddress
    ParameterLabels:
      IpAddress:
        default: "IP Address"
Mappings:
  RegionMap: 
    us-east-2:  # Ohio
      AMI: ami-09eda8943319241d7
Resources:
  SSRFS3Role:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - "ec2.amazonaws.com"
            Action:
              - sts:AssumeRole
      Path: "/"
      Policies:
        - PolicyName: SSRFS3Policy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:ListBucket
                Resource:
                  - !Sub
                    - 'arn:aws:s3:::${SSRFS3Bucket}'
                    - {SSRFS3Bucket: !Ref 'SSRFS3Bucket'}
              - Effect: Allow
                Action:
                  - s3:GetObject
                Resource:
                  - !Sub
                    - 'arn:aws:s3:::${SSRFS3Bucket}/*'
                    - {SSRFS3Bucket: !Ref 'SSRFS3Bucket'}
  SSRFInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: "/"
      Roles:
        - Ref: SSRFS3Role
  SSRFS3SG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security Group that allows HTTP traffic
      SecurityGroupIngress:
        - IpProtocol: tcp
          CidrIp: !Sub '${IpAddress}/32'
          FromPort: 80
          ToPort: 80
  SSRFInstance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.micro
      ImageId: !FindInMap [RegionMap, !Ref "AWS::Region", AMI]  # LAMP AMI in the template execution region
      Tags:
        - Key: Name
          Value: My SSRF EC2 Instance
      UserData: !Base64 |
        #!/bin/bash -x
        mv /home/bitnami/htdocs/index.html /home/bitnami/htdocs/index.html.bak
        wget https://raw.githubusercontent.com/osirislab/Giraffe/master/htdocs/ssrf.php -O /home/bitnami/htdocs/index.php
      IamInstanceProfile:
        Ref: SSRFInstanceProfile
      SecurityGroupIds:
        - Ref: SSRFS3SG
  SSRFS3Bucket:
    Type: AWS::S3::Bucket
    
Outputs:
  BucketName:
    Value: !Ref 'SSRFS3Bucket'
    Description: Name of the Amazon S3 bucket
  SSRFWebURL:
    Value: !Join ["", ["http://", !GetAtt SSRFInstance.PublicIp]]
    Description: URL of the vulnerable web server
